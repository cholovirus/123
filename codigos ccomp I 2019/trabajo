#include <iostream>

using namespace std;

class IntegerArray {
		int *data;
        int size_;
    public:
        IntegerArray() {
            this->size_ = 0;
			this->data = new int[0];
        }

		IntegerArray(int arr[], int size_){
			this->size_ = size_;
			this->data = new int[size_];
			for(int i = 0; i < size_; i++){
				this->data[i] = arr[i];
			}
		}

        void printArray(){
            for(int i=0;i<getSize();i++){
                cout<<this->data[i]<<endl;

            }
        }

        void reSize(int size_){
            int *temp= new int[size_];
            int minsize=(size_>this->size_)?this->size_:size_;
            for(int i=0;i<minsize;i++){
                temp[i]=this->data[i];
            }
            this->size_=size_;
            delete[] data;
            this->data=temp;
        }

        void insertar(int var){
            reSize(getSize()+1);
            this->data[size_-1]=var;
        }

        void eliminar(){
            reSize(getSize()-1);

        }


        void insertarPosicion(int var, int posicion){
	    	insertar(var);
   	    	for(int i=getSize()-1;i>=posicion;i--){
                int temp=this->data[i];
                this->data[i]=this->data[i-1];
                this->data[i-1]=temp;
                }
            }

        void eliminarP(int posicion){
            for(int i=posicion-1;i<this->size_;i++){
                int temp=this->data[i];
                this->data[i]=this->data[i+1];
                this->data[i+1]=temp;

            } eliminar();

        }

		int getSize(){
			return size_;
		}
		~IntegerArray(){
			delete[] this->data;
		}
};

int main()
{
    int arre[]={1,2,3,4};
    IntegerArray arr(arre,4);

    arr.insertarPosicion(43,1);
    arr.insertarPosicion(43,1);
    arr.insertarPosicion(43,1);
    arr.insertarPosicion(43,1);
    arr.insertarPosicion(43,1);
    arr.insertarPosicion(43,1);
    arr.insertarPosicion(43,1);
    arr.insertarPosicion(43,1);
    arr.insertarPosicion(43,1);
    arr.eliminarP(1);
    arr.eliminarP(1);
    arr.eliminarP(1);
    arr.eliminarP(1);
    arr.eliminarP(1);
    arr.eliminarP(1);

    arr.eliminarP(1);





    arr.printArray();
    return 0;
}
